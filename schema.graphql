type KlerosStat @entity {
  id: ID!
  courtCount: BigInt!
  disputeCount: BigInt!
  uniqueJurorCount: BigInt!
  activeJurorCount: BigInt!
}

type Court @entity {
  id: ID!

  subcourtID: BigInt!
  parent: Court

  hiddenVotes: Boolean!
  minStake: BigInt!
  alpha: BigInt!
  feeForJuror: BigInt!
  jurorsForCourtJump: BigInt!
  timesPerPeriod: [BigInt!]!
  children: [BigInt!]!

  disputeCount: BigInt!
  policy: String
}

type Dispute @entity {
  id: ID!
  disputeID: BigInt!
  arbitrable: Bytes! # address

  subcourt: Court!
  numberOfChoices: BigInt!
  period: Int! # Enum
  lastPeriodChange: BigInt!
  drawsInRound: BigInt!
  commitsInRound: BigInt!
  ruled: Boolean!
}

type Juror @entity {
  id: ID!
  subCourts: [Court!]!
  stakedToken: BigInt!
  lockedToken: BigInt!
  jurorStakes: [JurorStake!] ! @derivedFrom(field: "juror")
}

type JurorStake @entity {
  id: ID!
  juror: Juror!
  subcourt: Court!
  stakedToken: BigInt!
  lockedToken: BigInt!
}

type Arbitrable @entity {
  id: ID!
}